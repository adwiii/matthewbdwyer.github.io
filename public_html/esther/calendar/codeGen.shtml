<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

  <meta name="GENERATOR" content="Microsoft FrontPage 5.0">

  <meta name="ProgId" content="FrontPage.Editor.Document">

  <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
  <title>Compiler Construction</title>


  <link rel="stylesheet" type="text/css" href="../css/style.css">

  <meta name="Microsoft Border" content="tlb, default">

</head>


<body>

<table border="0" cellpadding="0" cellspacing="0" width="100%">

  <tbody>

    <tr>

      <td>
      <table id="AutoNumber3" style="border-collapse: collapse;" bgcolor="#ffffff" border="1" bordercolor="#0066ff" cellpadding="0" cellspacing="0" width="100%">

        <tbody>

          <tr>

            <td bordercolor="#0066FF" bordercolorlight="#0066FF" bordercolordark="#0066FF" bgcolor="#b3b3ff" width="100%">
            <p align="center"><b><font face="Arial" size="5">CSCE 425/825 - Compiler
Construction</font></b></p>

            </td>

          </tr>

        </tbody>
      </table>

      <p><span style="position: absolute; top: 50px; left: 11px;">
      <img src="../images/12x12spacer.gif" border="0" height="12" width="12"></span> </p>

      </td>

    </tr>

<!--msnavigation-->
  </tbody>
</table>

<table dir="ltr" border="0" cellpadding="0" cellspacing="0" width="100%">

  <tbody>

    <tr>

<!--#include file="sidebar.shtml" -->
      <td valign="top" width="24"></td>

<!--msnavigation--><td valign="top">
      <p><b><font face="Arial" size="5">Code Generation</font></b></p>

      <h1><font face="Arial" size="2">Exercises</font></h1>
      <ol>
      <li><font face="Arial" size="2">
	  Discuss a good strategy for computing stack limits for ESJ methods.
          </font></li> 

      <li><font face="Arial" size="2">
	  Show an appropriate code template for a <em>for</em> loop.
          </font></li> 

      <li><font face="Arial" size="2">
          There are lots of different ways to implement different operations.
          In the lecture notes, we show a template for <code>!E</code> on slide
	  28 implemented using jumps.  Define a template that uses the fact that
          boolean values are represented as 0 and 1 and converts between them
	  by evaluation <code>1-E</code>.   Modify the SJC code-generator to see
          how it works.
          </font></li> 

      </ol>

      <h1><font face="Arial" size="2">Reading</font></h1>

      <ul>

        <li><font face="Arial" size="2">Dragon, Chapter 8.1-8.8</font></li> 

      </ul>

      <p><font face="Arial" size="2"><b>Materials</b></font></p>

      <p><font face="Arial" size="2">
      <a href="resources/16-code-generation.pdf">Code Generation in SJC</a><br>

      </font></p>

      </font>
      </td>

    </tr>

  </tbody>
</table>

<br>
</body>
</html>
