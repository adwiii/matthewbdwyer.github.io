State 11 contains 4 shift/reduce conflicts.
State 12 contains 4 shift/reduce conflicts.
State 13 contains 4 shift/reduce conflicts.
State 14 contains 4 shift/reduce conflicts.

Grammar
rule 1    exp -> tIDENTIFIER
rule 2    exp -> tINTCONST
rule 3    exp -> exp '*' exp
rule 4    exp -> exp '/' exp
rule 5    exp -> exp '+' exp
rule 6    exp -> exp '-' exp
rule 7    exp -> '(' exp ')'

Terminals, with rules where they appear

$ (-1)
'(' (40) 7
')' (41) 7
'*' (42) 3
'+' (43) 5
'-' (45) 6
'/' (47) 4
error (256)
tINTCONST (258) 2
tIDENTIFIER (259) 1

Nonterminals, with rules where they appear

exp (11)
    on left: 1 2 3 4 5 6 7, on right: 3 4 5 6 7


state 0

    tINTCONST	shift, and go to state 1
    tIDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 3

    exp 	go to state 4



state 1

    exp  ->  tINTCONST .   (rule 2)

    $default	reduce using rule 2 (exp)



state 2

    exp  ->  tIDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (exp)



state 3

    exp  ->  '(' . exp ')'   (rule 7)

    tINTCONST	shift, and go to state 1
    tIDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 3

    exp 	go to state 5



state 4

    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp . '+' exp   (rule 5)
    exp  ->  exp . '-' exp   (rule 6)

    $   	go to state 15
    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7
    '+' 	shift, and go to state 8
    '-' 	shift, and go to state 9



state 5

    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp . '+' exp   (rule 5)
    exp  ->  exp . '-' exp   (rule 6)
    exp  ->  '(' exp . ')'   (rule 7)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7
    '+' 	shift, and go to state 8
    '-' 	shift, and go to state 9
    ')' 	shift, and go to state 10



state 6

    exp  ->  exp '*' . exp   (rule 3)

    tINTCONST	shift, and go to state 1
    tIDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 3

    exp 	go to state 11



state 7

    exp  ->  exp '/' . exp   (rule 4)

    tINTCONST	shift, and go to state 1
    tIDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 3

    exp 	go to state 12



state 8

    exp  ->  exp '+' . exp   (rule 5)

    tINTCONST	shift, and go to state 1
    tIDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 3

    exp 	go to state 13



state 9

    exp  ->  exp '-' . exp   (rule 6)

    tINTCONST	shift, and go to state 1
    tIDENTIFIER	shift, and go to state 2
    '(' 	shift, and go to state 3

    exp 	go to state 14



state 10

    exp  ->  '(' exp ')' .   (rule 7)

    $default	reduce using rule 7 (exp)



state 11

    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp '*' exp .   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp . '+' exp   (rule 5)
    exp  ->  exp . '-' exp   (rule 6)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7
    '+' 	shift, and go to state 8
    '-' 	shift, and go to state 9

    '*' 	[reduce using rule 3 (exp)]
    '/' 	[reduce using rule 3 (exp)]
    '+' 	[reduce using rule 3 (exp)]
    '-' 	[reduce using rule 3 (exp)]
    $default	reduce using rule 3 (exp)



state 12

    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp '/' exp .   (rule 4)
    exp  ->  exp . '+' exp   (rule 5)
    exp  ->  exp . '-' exp   (rule 6)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7
    '+' 	shift, and go to state 8
    '-' 	shift, and go to state 9

    '*' 	[reduce using rule 4 (exp)]
    '/' 	[reduce using rule 4 (exp)]
    '+' 	[reduce using rule 4 (exp)]
    '-' 	[reduce using rule 4 (exp)]
    $default	reduce using rule 4 (exp)



state 13

    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp . '+' exp   (rule 5)
    exp  ->  exp '+' exp .   (rule 5)
    exp  ->  exp . '-' exp   (rule 6)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7
    '+' 	shift, and go to state 8
    '-' 	shift, and go to state 9

    '*' 	[reduce using rule 5 (exp)]
    '/' 	[reduce using rule 5 (exp)]
    '+' 	[reduce using rule 5 (exp)]
    '-' 	[reduce using rule 5 (exp)]
    $default	reduce using rule 5 (exp)



state 14

    exp  ->  exp . '*' exp   (rule 3)
    exp  ->  exp . '/' exp   (rule 4)
    exp  ->  exp . '+' exp   (rule 5)
    exp  ->  exp . '-' exp   (rule 6)
    exp  ->  exp '-' exp .   (rule 6)

    '*' 	shift, and go to state 6
    '/' 	shift, and go to state 7
    '+' 	shift, and go to state 8
    '-' 	shift, and go to state 9

    '*' 	[reduce using rule 6 (exp)]
    '/' 	[reduce using rule 6 (exp)]
    '+' 	[reduce using rule 6 (exp)]
    '-' 	[reduce using rule 6 (exp)]
    $default	reduce using rule 6 (exp)



state 15

    $   	go to state 16



state 16

    $default	accept
