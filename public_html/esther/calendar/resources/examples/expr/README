These files illustrates how to construct a JLex scanner and CUP parser
that work together.  You'll need to look at the documentation for both
JLex and CUP to understand all of the details.  Another resource I would
recommend is to look at the Tiger examples on the home-page for the
text-book.

The parser consists of three files:
  Main.java    a driver program to get things started
  scanner.jl   the scanner (JLex input)
  parser.cup   the parser with actions (CUP input)

To use JLex and CUP you need to access the executables "jjlex"
and "jjcup" in ~dwyer/.html/courses/606/TOOLS.  You can either set
up aliases or add that directory to your path.  In addition, you
need to set your CLASSPATH variable to point to that directory.

This example is built as a single Java package, "expr", so you
will need to put it in a directory with that name and put that
directory on your CLASSPATH as well.

Once this is all setup the example is built as follows.
Note that the current version of CUP requires a recent version
of the JDK, so be sure and use the "-new" versions of the tools
(as given below).

Step 1) jjlex scanner.jl

This will produce a file "scanner.jl.java".  To make the java compiler
you will want to move this to "scanner.java".

Step 2) jjcup parser.cup

This will produce two files "parser.java" and "sym.java".  This second
file holds the token definitions that are used by both the scanner
and parser (and which are defined by the "%token" directives in the
CUP file).

Step 3) run javac-new on all the *.java files

This will create the following class files:
  Main.class
  CUP$parser$actions.class
  parser.class
  scanner.class
  sym.class

Step 4) test it out

This parser accepts input on stdin.  For example, 

  cat input | java-new expr.Main

Should give the following result:

  result is 7

