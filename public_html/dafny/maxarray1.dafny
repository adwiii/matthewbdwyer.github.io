method max1(V:array<int>) returns (max : int)
  requires V != null;
  requires V.Length > 0;
  ensures forall i :: 0 <= i < V.Length ==> max >= V[i];
{
  max := maxInSuffix(V,0);
  return max;
}

method maxInSuffix(V:array<int>, pos : int) returns (max : int)
  requires V != null;
  requires 0 <= pos < V.Length;
  ensures forall i :: pos <= i < V.Length ==> max >= V[i];
  decreases V.Length - pos;
{
  if (V.Length - pos == 1) {
    return V[pos];
  } else {
    var maxRest := maxInSuffix(V,pos+1);
    if (V[pos] > maxRest) {
      return V[pos];
    } else {
      return maxRest;
    }
  }
}
  
