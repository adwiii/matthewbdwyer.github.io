<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

  <meta name="GENERATOR" content="Microsoft FrontPage 5.0">

  <meta name="ProgId" content="FrontPage.Editor.Document">

  <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
  <title>Advanced Compilers</title>


  <link rel="stylesheet" type="text/css" href="../css/style.css">

  <meta name="Microsoft Border" content="tlb">

</head>


<body>

<table border="0" cellpadding="0" cellspacing="0" width="100%">

  <tbody>

    <tr>

      <td>
      <table id="AutoNumber3" style="border-collapse: collapse;" bgcolor="#ffffff" border="1" bordercolor="#0066ff" cellpadding="0" cellspacing="0" width="100%">

        <tbody>

          <tr>

            <td bordercolor="#0066FF" bordercolorlight="#0066FF" bordercolordark="#0066FF" bgcolor="#b3b3ff" width="100%">
            <p align="center"><b><font face="Arial" size="5">CSCE 496/896 - Advanced
Compilers</font></b></p>

            </td>

          </tr>

        </tbody>
      </table>

      <p><span style="position: absolute; top: 50px; left: 11px;"> <br>

      </span> </p>

      </td>

    </tr>

  </tbody>
</table>

<table border="0" cellpadding="0" cellspacing="0" dir="ltr" width="100%">

  <tbody>

    <tr>

<!--#include file="sidebar.shtml" --> <td valign="top" width="24"></td>

      <td valign="top">
      <p><b><font face="Arial" size="5">Readings</font></b></p>

      <table id="AutoNumber4" style="border-collapse: collapse;" border="0" bordercolor="#111111" cellpadding="0" cellspacing="0" width="100%">

        <tbody>

          <tr>
	    Whenever possible links to papers are provided through the ACM
            Portal or IEEE Explore; when accessed on campus you should be able
            to download the PDF from those sights.  You can also access full
            bibliographic information from those sights.
	    <p>
	    A few portions of books, some of which are out of print, have been
            photocopied and distributed in class.
            <p> 
	    Note that some of these readings actually span multiple areas, so don't
            read too much into the categorization.
            <p> 
	    <h2>The Basics</h2>
		<ul>
		<li> PPA, chapters 1.1-1.4, 1.7, 2.1-2.4 (distributed in class)
		<li> Checking System Rules Using System-Specific, Programmer-Written
		     Compiler Extensions, Engler et. al., OSDI, 2000 (<a href="calendar/papers/Engler-OSDI00.pdf">PDF</a>)
	        <li> Efficiently Computing Static Single Assignment Form and the
		     Control Dependence Graph, Cytron et. al., TOPLAS 1991 (<a href="http://portal.acm.org/citation.cfm?id=115372.115320">PDF</a>)
		</ul>

	    <h2>Context-sensitive Analyses</h2>
		<ul>
		<li> PPA, chapters 2.5 (distributed in class)
		<li> Two Approaches to Interprocedural Data Flow Analysis, Sharir and Pnueli, Program Flow Analysis : Theory and Applications, pp. 189-233, Prentice-Hall, 1981 (distributed in class)
		<li> Program Analysis via Graph Reachability, Reps, Information and Software Technology, 1998 (<a href="calendar/papers/Reps-IST97.pdf">PDF</a>)
		<li> Parameterized Object Sensitivity for Points-to Analysis for Java, Milanova et. al., TOSEM, 2005 (<a href="http://portal.acm.org/citation.cfm?id=1044834.1044835">PDF</a>)
		</ul>

	    <h2>Heap Analyses</h2>
	        Several of the other readings cover modern approaches to points-to/alias
		analysis and we'll focus mostly on those, but
		where has been very interesting work done on general shape analysis
  		frameworks.  I include them here for your interest, but we won't
		be covering them in detail this semester (except for the HSG in von Praun's thesis).
		<ul>
		<li> PPA, chapters 2.6 (distributed in class)
		<li> Is it a tree, a DAG, or a cyclic graph? A shape analysis for heap-directed pointers in C, Ghiya and Hendren, POPL, 1996 (<a href="http://portal.acm.org/citation.cfm?id=237724">PDF</a>)
		<li> Detecting Synchronization Defects in Multi-Threaded Object-Oriented Programs, von Praun, PhD Thesis, ETH Zurich, 2004 (<a href="calendar/papers/vonPraun-Dissertation.pdf">PDF</a>)
		</ul>

	    <h2>Path-sensitive Property Analyses</h2>
		<ul>
		<li> Extending typestate checking using conditional liveness analysis, Strom and Yellin, TSE, 1993 (<a href="http://ieeexplore.ieee.org/search/wrapper.jsp?arnumber=232013">PDF</a>)
		<li> ESP : path-sensitive program verification in polynomial time, Das, Lerner and Siegle, PLDI, 2002 (<a href="http://portal.acm.org/citation.cfm?id=512538">PDF</a>)
		<li> Lightweight object specification with typestates, Bierhoff and Aldrich, ESEC/FSE, 2005 (<a href="http://portal.acm.org/citation.cfm?id=1081706.1081741">PDF</a>)
		</ul>

	    <h2>Concurrency Analyses</h2>
		<ul>
		<li> Detecting Synchronization Defects in Multi-Threaded Object-Oriented Programs, von Praun, PhD Thesis, ETH Zurich, 2004 (<a href="calendar/papers/vonPraun-Dissertation.pdf">PDF</a>)
		<li> Flow Analysis for Verifying Properties of Concurrent Software Systems, Dwyer et. al., TOSEM, 2004 (<a href="http://portal.acm.org/citation.cfm?id=1040291.1040292">PDF</a>)
		<li> Purity and Side Effect Analysis for Java Programs, Salcianu and Rinard, VMCAI, 2005 (<a href="calendar/papers/Salcianu-VMCAI05.pdf">PDF</a>)
		</ul>


	    <h2>BDDs in Program Analysis</h2>
		Note that there are many other recent publications in this area but Lhotak's
		thesis does a great job of explaining those approaches.
		<ul>
		<li> Program Analysis Using Binary Decision Diagrams, Lhotak, PhD Thesis, Mcgill, 2006 (<a href="calendar/papers/Lhotak-Dissertation.ps">PS</a>, <a href="calendar/papers/Lhotak-Dissertation.pdf">PDF</a>)
		<li> Context-sensitive Program Analysis as Database Queries, Lam et. al., PODS, 2005 (<a href="http://portal.acm.org/citation.cfm?id=1065169">PDF</a>)
		</ul>
            </td>

          </tr>

        </tbody>
      </table>

      </td>

    </tr>

  </tbody>
</table>

</body>
</html>
